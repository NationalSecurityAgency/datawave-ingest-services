name: Tests

on:
  push:
    paths-ignore: ['*.md', 'CODEOWNERS', 'LICENSE']
    branches:
      - 'main'
      - 'master'
      - 'release/*'
  pull_request:
    paths-ignore: ['*.md', 'CODEOWNERS', 'LICENSE']

env:
  JAVA_VERSION: '8'
  JAVA_DISTRIBUTION: 'zulu'

jobs:
  # Runs the pom sorter and code formatter to ensure that the code
  # is formatted and poms are sorted according to project rules. This
  # will fail if the formatter makes any changes.
  check-code-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK ${{env.JAVA_VERSION}}
        uses: actions/setup-java@v3
        with:
          distribution: ${{env.JAVA_DISTRIBUTION}}
          java-version: ${{env.JAVA_VERSION}}
          cache: 'maven'
      - name: Format code
        run: |
          mvn -V -B -e clean formatter:format sortpom:sort -Pautoformat
          git status
          git diff-index --quiet HEAD || (echo "Error! There are modified files after formatting." && false)
        env:
          MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Djava.awt.headless=true"

  # Build the code and run the unit/integration tests.
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK ${{env.JAVA_VERSION}}
        uses: actions/setup-java@v3
        with:
          distribution: ${{env.JAVA_DISTRIBUTION}}
          java-version: ${{env.JAVA_VERSION}}
          cache: 'maven'
      - name: Build and Run Unit Tests
        run: mvn -V -B -e -Ddist clean verify
        env:
          MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Djava.awt.headless=true"
