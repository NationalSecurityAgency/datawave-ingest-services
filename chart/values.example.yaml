# global overrides for all microservices
global:
  # OPTIONAL use as a prefix for a registry if in use, otherwise leave blank
  registry: ""
  # External service links
  services:
    # REQUIRED configuration service name/endpoint (all services) this should match configuration.name if built-in configuration is enabled
    configuration: ingest-configuration
    # REQUIRED rabbitmq service name/endpoint for configservice application.yml this should match messaging.name if built-in enabled
    rabbitmq: ingest-rabbitmq
    # REQUIRED zookeeper service name/endpoint for ingest services
    zookeeper: zookeeper
  # Externally defined secret specification
  secrets:
    # REQUIRED accumulo secret
    accumulo:
      # REQUIRED secret name containing accumulo user/password
      name: accumulo
      # REQUIRED username for accumulo user
      username: username
      # REQUIRED password for accumulo user
      password: password
    # REQUIRED keystore secret
    keystore:
      # REQUIRED keystore name
      name: keystore
      # REQUIRED alias key
      alias: alias
      # REQUIRED path key
      path: path
      # REQUIRED password key
      password: password
    # REQUIRED truststore secret
    truststore:
      # REQUIRED keystore name
      name: truststore
      # REQUIRED path key
      path: path
      # REQUIRED password key
      password: password
  # Volume definitions
  volumes:
    # REQUIRED (Feeder/Ingest/Bundler) PKI volume
    pki:
      # PKI volume name
      name: pki
      # REQUIRED mount location for pki
      destination: /data/certs
      # OPTIONAL specify if the volume is ready only
      readOnly: true
      source:
        # REQUIRED must be one of secret/configmap/hostPath
        type: secret
        # REQUIRED with type secret or configmap
        name: datawave-certificates-secret
    # REQUIRED (Feeder/Ingest/Bundler) HADOOP config volume
    hadoop:
      # REQUIRED HADOOP config volume name
      name: hadoop
      # REQUIRED mount location for hadoop
      destination: /etc/hadoop/conf
      # OPTIONAL specify if the volume is ready only
      readOnly: true
      source:
        # REQUIRED must be one of secret/configmap/hostPath
        type: configmap
        # REQUIRED with type secret or configmap
        name: hadoop-hadoop-minikube
    # REQUIRED (Feeder/Ingest/Bundler) logs volume
    logs:
      # REQUIRED logs mount name
      name: logs
      # REQUIRED mount location for logs
      destination: /logs
      source:
        # REQUIRED must be one of secret/configmap/hostPath
        type: hostPath
        # REQUIRED when specifying hostPath, host path to mount into destination
        path: /srv/logs
    # REQUIRED (Ingest) datawave ingest volume
    datawave:
      # REQUIRED datawave-config name
      name: datawave-conf
      # REQUIRED mount location for datawave-config
      destination: /etc/datawave/conf
      # OPTIONAL specify if the volume is ready only
      readOnly: true
      source:
        # REQUIRED must be one of secret/configmap/hostPath
        type: configmap
        # REQUIRED with type secret or configmap
        name: datawave-ingest-configmap
    # REQUIRED (Ingest)
    output:
      # REQUIRED Output location volume name
      name: output
      # REQUIRED mount location for output
      destination: /output
      # REQUIRED hdfs prefix for destination
      prefix: "file://"
      source:
        # REQUIRED must be one of secret/configmap/hostPath
        type: hostPath
        # REQUIRED when specifying hostPath, host path to mount into destination
        path: /srv/data/datawave/ingest/
    # REQUIRED (Bundler)
    input:
      # REQUIRED input location volume
      name: input
      # REQUIRED mount location for input
      destination: /input
      source:
        # REQUIRED must be one of secret/configmap/hostPath
        type: hostPath
        # REQUIRED when specifying hostPath, host path to mount into destination
        path: /srv/data/datawave/ingest/
    config:
      name: application-configs
      destination: /microservice-config
      # OPTIONAL specify if the volume is ready only
      readOnly: true
      source:
        type: configmap
        name: application-configs-configmap
    rabbit:
      name: rabbit
      destination: /etc/rabbitmq/
      # OPTIONAL specify if the volume is ready only
      readOnly: true
      source:
        type: configmap
        name: rabbit-configmap
# Feeder definition
feeder:
  # Each feeder should be defined within feeds. One deployment per feed will be created
  feeds:
    # feed name
    - name: "feed1"
      # spring profiles to apply to feed1
      profile: "minikube,dev,profile1"
      # rabbitmq queue to publish content from feed1
      queue: "fast"
    # feed name
    - name: "feed2"
      # spring profiles to apply to feed2
      profile: "minikube,dev,profile2"
      # rabbitmq queue to publish content from feed2
      queue: "fastest"
    # feed name
    - name: "feed3"
      # spring profiles to apply to feed3
      profile: "minikube,dev,profile3"
      # rabbitmq queue to publish content from feed3
      queue: "fastest"
# Ingest definition
ingest:
  # Each ingest pool will create a deployment with replicas
  pools:
    # ingest pool name
    - name: "speedy"
      # rabbitmq queue to read off of
      queue: "fast"
      # number of replcias in the pool
      replicas: 1
      # spring profiles to apply to speedy pool
      profiles: "minikube,dev,profile1"
    # ingest pool name
    - name: "speediest"
      # rabbitmq queue to read off of
      queue: "fastest"
      # number of replicas in the pool
      replicas: 1
      # spring profiles to apply to speediest pool
      profiles: "minikube,dev,profile2"
# Bundler definitions
bundler:
  # true if the bundler is being used
  enabled: true
  # bundler pools will be deployed as a daemonset for each pool
  pools:
    # pri1 pool
    - name: pri1
      # spring profiles to apply to pri1 bundler
      profiles: minikube,dev,pri1
    # pri2 pool
    - name: pri2
      # spring profiles to apply to pri2 bundler
      profiles: minikube,dev,pri2
# if a secret is necessary for bootstrapping define it here.
#### FOR TESTING ONLY. DO NOT USE IN PRODUCTION ####
secrets:
  accumulo:
    # accumulo secret name
    name: accumulo
    # accumulo username value
    username: root
    # accumulo password value
    password: root
  keystore:
    name: keystore
    alias: "1"
    password: changeme
    path: "file:///data/certs/keystore.p12"
  truststore:
    name: truststore
    password: ChangeIt
    path: "file:///data/certs/truststore.jks"
  pki:
    name: datawave-certificates-secret
    dir: example-certs
# if configuration is necessary for bootstrapping define it here, specify another named configuration service in global.services.configuration
# configuration.name and messaging.name should match global.services.configuration and global.services.rabbitmq if enabled
configuration:
  enabled: true
  name: ingest-configuration
  dir: example-config
  port: 8888
  replicaCount: 1
  image:
    repository: datawave/config-service
    pullPolicy: IfNotPresent
    tag: 1.6-SNAPSHOT
messaging:
  enabled: true
  name: ingest-rabbitmq
  replicaCount: 1
  image:
    repository: rabbitmq
    pullPolicy: IfNotPresent
    tag: 3.11.4-alpine
  ports:
    amqp: 5672
    mgmt: 15672
